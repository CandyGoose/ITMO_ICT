""" 
yield — это ключевое слово в Python, которое используется для возврата
из функции с сохранением состояния ее локальных переменных,
и при повторном вызове такой функции выполнение продолжается с оператора yield,
на котором ее работа была прервана. 
"""
# Пример 1.
""" 
демонстрация использования yield
    генерация нового списка, состоящего
    только из четных чисел
"""
def get_even(list_of_nums) :
    """
    функция, содержащая yield, является генератором
    """
    for i in list_of_nums:
        if i % 2 == 0:
            yield i


# инициализация списка
list_of_nums = [11, 22, 23, 18, 15, 42]
 
# вывод начального списка
print ("До фильтрации в генераторе: " +  str(list_of_nums))
 
# вывод только четных значений из списка
print ("Только четные числа: ", end = " ")
for i in get_even(list_of_nums):
    print (i, end = " ")


print(get_even(list_of_nums)) # <generator object get_even at...

list_to_2 = list(get_even(list_of_nums))
print(*list_to_2, sep="/")

# Пример 2.
""" 
демонстрация использования yield
    генерация нового списка, состоящего
    из чисел, возведенные в куб
"""

def nextCube(count):
    """ Функция будет бесконечно генерировать
        последовательность чисел в третьей степени,
        начиная с 1
    """
    acc, it = 1, 0
    while True:
        yield acc**3                
        acc += 1 # После повторного обращения
                 # исполнение продолжится отсюда
        it+=1

        if it == count:
            break

 
# запрашиваем у генератора 
# и выводим 15 чисел
list_to_15 = list(nextCube(15))
print(*list_to_15, sep="/")

